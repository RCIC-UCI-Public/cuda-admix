!include rcic-package.yaml
---
- package: CUDA Definitions 
  basename: cuda-toolkit
  release: "{{versions.rpmrelcuda}}"
  cudabaserpm: "{{basename}}_{{cuda.shortversion}}"
  versions: !include versions.yaml
  version: "{{cuda.shortversion}}" 
  vendor_source: http://developer.download.nvidia.com/compute/{{cuda.shortversion}}/10.1/Prod/local_installers/{{cuda.src_tarball}}
  cuda:
    name: cuda
    shortversion: "{{versions.cuda.major}}.{{versions.cuda.minor}}.{{versions.cuda.subrelease}}"
    version: "{{cuda.shortversion}}_{{versions.cuda.fullrelease}}"
    major: "{{versions.cuda.major}}"
    minor: "{{versions.cuda.minor}}" 
    extension: run
    src_tarball: "{{cuda.name}}_{{cuda.version}}_linux.{{cuda.extension}}"
  src_tarball:
  src_dir:
  no_src_dir: True
  parent: "{{pkg_defaults.app_path}}/{{cuda.name}}"
  root: "{{parent}}/{{cuda.shortversion}}"
  extractDir: $(REDHAT.BUILD)/cudaExtract
  extractDir2: !ifeq "{{cuda.major}},10,{{extractDir}},$(REDHAT.BUILD)/cudaExtractDriver"
  extractarg: !ifeq "{{cuda.major}},10,extract,installpath"
  contents: .
  toplevel: !ifeq "{{cuda.major}},10,/cuda-toolkit,"
  listing: listing
  findArgs:
  build:
    configure: echo no configure required 
    configure_args: echo no configure required 
    pkgmake: echo files extracted during {{basename}} build 
  install:
    makeinstall: >
      pushd {{extractDir}}{{toplevel}};
      find {{contents}} {{findArgs}} > {{listing}};
      if [ ! -d $(ROOT){{root}} ]; then mkdir -p $(ROOT){{root}}; fi;
      cpio -p --make-directories $(ROOT){{root}} < {{listing}};
      /bin/rm -rf $(ROOT){{root}}/listing;
      popd
  files:
    - "{{parent}}"
  requires:
    - "{{cudabaserpm}}"
